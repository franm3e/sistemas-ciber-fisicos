/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_ALERT_DATA_PB_H_INCLUDED
#define PB_ALERT_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _AlertValue {
    char name[65]; /* Longitud m√°xima de 64 caracteres */
    char value[65]; /* Mensaje de alerta */
} AlertValue;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define AlertValue_init_default                  {"", ""}
#define AlertValue_init_zero                     {"", ""}

/* Field tags (for use in manual encoding/decoding) */
#define AlertValue_name_tag                      1
#define AlertValue_value_tag                     2

/* Struct field encoding specification for nanopb */
#define AlertValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, STRING,   value,             2)
#define AlertValue_CALLBACK NULL
#define AlertValue_DEFAULT NULL

extern const pb_msgdesc_t AlertValue_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AlertValue_fields &AlertValue_msg

/* Maximum encoded size of messages (where known) */
#define ALERT_DATA_PB_H_MAX_SIZE                 AlertValue_size
#define AlertValue_size                          132

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
