/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_SENSOR_DATA_PB_H_INCLUDED
#define PB_SENSOR_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorValue {
    char name[65]; /* Longitud m√°xima de 64 caracteres */
    float value; /* Valor del sensor */
} SensorValue;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorValue_init_default                 {"", 0}
#define SensorValue_init_zero                    {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorValue_name_tag                     1
#define SensorValue_value_tag                    2

/* Struct field encoding specification for nanopb */
#define SensorValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             2)
#define SensorValue_CALLBACK NULL
#define SensorValue_DEFAULT NULL

extern const pb_msgdesc_t SensorValue_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorValue_fields &SensorValue_msg

/* Maximum encoded size of messages (where known) */
#define SENSOR_DATA_PB_H_MAX_SIZE                SensorValue_size
#define SensorValue_size                         71

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
